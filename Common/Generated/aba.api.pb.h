/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_ABA_API_ABA_API_PB_H_INCLUDED
#define PB_ABA_API_ABA_API_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _aba_api_eVersion {
    aba_api_eVersion_VER_RESERVED = 0,
    aba_api_eVersion_VER_API = 1,
    aba_api_eVersion_VER_CAN = 1
} aba_api_eVersion;

typedef enum _aba_api_eCommand {
    aba_api_eCommand_CMD_RESET = 0,
    aba_api_eCommand_CMD_BOOTLOADER = 1,
    aba_api_eCommand_CMD_SAMBA = 2,
    aba_api_eCommand_CMD_GETVERSION = 3,
    aba_api_eCommand_CMD_TIMESTAMP = 4,
    aba_api_eCommand_CMD_TWINKLE = 5
} aba_api_eCommand;

/* Struct definitions */
typedef struct _aba_api_CmdMessage {
    aba_api_eCommand cmd;
} aba_api_CmdMessage;

typedef struct _aba_api_Timestamp {
    uint64_t timestamp;
} aba_api_Timestamp;

typedef struct _aba_api_Versions {
    uint32_t firmware;
    aba_api_eVersion api;
    aba_api_eVersion can;
    uint32_t bootloader;
    uint32_t hardware;
    uint32_t hash;
} aba_api_Versions;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _aba_api_eVersion_MIN aba_api_eVersion_VER_RESERVED
#define _aba_api_eVersion_MAX aba_api_eVersion_VER_CAN
#define _aba_api_eVersion_ARRAYSIZE ((aba_api_eVersion)(aba_api_eVersion_VER_CAN+1))

#define _aba_api_eCommand_MIN aba_api_eCommand_CMD_RESET
#define _aba_api_eCommand_MAX aba_api_eCommand_CMD_TWINKLE
#define _aba_api_eCommand_ARRAYSIZE ((aba_api_eCommand)(aba_api_eCommand_CMD_TWINKLE+1))

#define aba_api_CmdMessage_cmd_ENUMTYPE aba_api_eCommand


#define aba_api_Versions_api_ENUMTYPE aba_api_eVersion
#define aba_api_Versions_can_ENUMTYPE aba_api_eVersion


/* Initializer values for message structs */
#define aba_api_CmdMessage_init_default          {_aba_api_eCommand_MIN}
#define aba_api_Timestamp_init_default           {0}
#define aba_api_Versions_init_default            {0, _aba_api_eVersion_MIN, _aba_api_eVersion_MIN, 0, 0, 0}
#define aba_api_CmdMessage_init_zero             {_aba_api_eCommand_MIN}
#define aba_api_Timestamp_init_zero              {0}
#define aba_api_Versions_init_zero               {0, _aba_api_eVersion_MIN, _aba_api_eVersion_MIN, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define aba_api_CmdMessage_cmd_tag               1
#define aba_api_Timestamp_timestamp_tag          1
#define aba_api_Versions_firmware_tag            1
#define aba_api_Versions_api_tag                 2
#define aba_api_Versions_can_tag                 3
#define aba_api_Versions_bootloader_tag          4
#define aba_api_Versions_hardware_tag            5
#define aba_api_Versions_hash_tag                6

/* Struct field encoding specification for nanopb */
#define aba_api_CmdMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    cmd,               1)
#define aba_api_CmdMessage_CALLBACK NULL
#define aba_api_CmdMessage_DEFAULT NULL

#define aba_api_Timestamp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   timestamp,         1)
#define aba_api_Timestamp_CALLBACK NULL
#define aba_api_Timestamp_DEFAULT NULL

#define aba_api_Versions_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   firmware,          1) \
X(a, STATIC,   SINGULAR, UENUM,    api,               2) \
X(a, STATIC,   SINGULAR, UENUM,    can,               3) \
X(a, STATIC,   SINGULAR, UINT32,   bootloader,        4) \
X(a, STATIC,   SINGULAR, UINT32,   hardware,          5) \
X(a, STATIC,   SINGULAR, UINT32,   hash,              6)
#define aba_api_Versions_CALLBACK NULL
#define aba_api_Versions_DEFAULT NULL

extern const pb_msgdesc_t aba_api_CmdMessage_msg;
extern const pb_msgdesc_t aba_api_Timestamp_msg;
extern const pb_msgdesc_t aba_api_Versions_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define aba_api_CmdMessage_fields &aba_api_CmdMessage_msg
#define aba_api_Timestamp_fields &aba_api_Timestamp_msg
#define aba_api_Versions_fields &aba_api_Versions_msg

/* Maximum encoded size of messages (where known) */
#define aba_api_CmdMessage_size                  2
#define aba_api_Timestamp_size                   11
#define aba_api_Versions_size                    28

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
